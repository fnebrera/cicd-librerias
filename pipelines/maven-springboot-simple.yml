#################################################
# Pipeline simple para proyectos maven-springboot
#################################################
workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'push'    # Solo en caso de push

# Esta es una imagen propia, con maven y git, y uso local. Requiere cambiar pull_policy en config.toml a 'if-not-present'
image: ck-maven-executor:1.0.0 

variables:
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
  GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  MAVEN_OPTS: "-Dmaven.repo.local=./.m2/repository"
  # Como acceder a gitlab desde un executor
  ORIGIN_URL: "https://oauth2:${CICD_TOKEN}@${CICD_HOST}/${CI_PROJECT_PATH}.git"

cache:
  # Este es el nombre del branch en el que hacemos push
  key: "$CI_COMMIT_REF_NAME"

# Etapas posibles del pipeline
stages:
  - compile
  - sonar
  - build
  - register
  - dockimage
  - tag

# Includes
include: 
  - project: 'comunytek/cicd-librerias'
    ref: master
    file: 
      # compile-job: comprueba que no hay errores de compilacion
      - 'jobs/maven/compile-simple.yml'
      # sonar-job: verifica calidad del codigo
      - 'jobs/maven/sonar-simple.yml'
      # build-job: genera el fat-jar
      - 'jobs/maven/build-simple.yml'
      # register-job: Sube el artefacto al registry
      - 'jobs/maven/register-simple.yml'
      # docker-job: crea una imagen docker y la guarda en el registry de gitlab
      - 'jobs/maven/docker-simple.yml'
      # tag-job: Genera tag (solo rama master) (manual)
      - 'jobs/maven/tag-simple.yml'


#########################################################################################################
# Registra el artefacto en el Package Registry de Gitlab. Se ejecuta en la fase "registry".
# Para que este job funcione, el Package Registry debe estar configurado en el pom.xml.
# Adicionamente debe existir un archivo 'ci_setting.xml' con las credenciales para el registry.
# Se ejecuta solo para ramas master, develop y hotfix (si existe).
# Se cachea el directorio /target, que habra sido populado previamente por la etapa build.
# La ejecucion es manual. Si queremos saltar este stage, debemos definir SKIP=true.
#
# Vers  Por Fecha      Notas
# ----- --- ---------- ----------------------------------------------------------------------------------
# 1.0.0 FNG 22/08/2022 Version inicial
# 1.0.1 FNG 06/10/2022 Version inicial
#
#########################################################################################################
pkg-register-job:
  stage: register

  variables:
    SKIP: "false"

  rules:
    # Control local del pipeline
    - if: $RUN_REGISTER_STAGES == "false"
      when: never
    # Hacemos register solo en develop, master y hotfix (si lo hay)
    - if: $CI_COMMIT_REF_NAME == "master" || $CI_COMMIT_REF_NAME == $HOTFIX_BRANCH
      when: manual
    - if: $CI_COMMIT_REF_NAME == "develop" && $REGISTER_DEVELOP == "true" 
      when: manual

  cache:
    paths:
      - ./.m2/repository
      - ./target

  before_script:
    - . funciones-bash.sh

  script:
    - |
      echo_job_banner REGISTER
      # En todas las etapas manuales hacemos lo mismo
      [[ ${SKIP} == "true" ]] && { echo "WARN: Ha entrado SKIP=true, asi que saltamos esta etapa."; exit 0; }
      # Necesitamos el fat-jar
      JAR_FILE="./target/${PRJ_NAME}-${PRJ_VERS}.jar"
      [[ -f "${JAR_FILE}" ]] || { echo "El archivo ${JAR_FILE} no existe"; exit 1; }
      #
      # Si queremos guardar solo el .jar y el pom (lo habitual), usaremos la forma simple de deploy:
      #
      # - mvn deploy -s ci_settings.xml -DskipTests
      #
      # Si ademas queremos guardar los fuentes, lo hacemos algo mas complicado, empleando
      # deploy-file.
      #
      #
      # Preparamos los fuentes, en formato tgz
      #
      SRC_FILE="./{PRJ_VERS}-src.tgz"
      tar czf ${SRC_FILE} ./src/*
      #
      # Deploy
      #
      REG_URL="${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/maven"
      mvn validate deploy:deploy-file -s ci_settings.xml \
      -Durl="${REG_URL}" \
      -DrepositoryId="gitlab-maven" \
      -Dfile="${JAR_FILE}" \
      -DpomFile="pom.xml" \
      -Dversion=${REG_VERSION} \
      -Dfiles=${SRC_FILE} \
      -Dclassifiers=src \
      -Dtypes=tgz

  ################################## E O F ##########################################


#########################################################################################################
# Registra el artefacto en el Package Registry de Gitlab. Se ejecuta en la fase "registry".
# Para que este job funcione, el Package Registry debe estar configurado en el pom.xml.
# Adicionamente debe existir un archivo 'ci_setting.xml' con las credenciales para el registry.
# Se ejecuta solo para ramas master, develop y hotfix (si existe).
# Se cachea el directorio /target, que habra sido populado previamente por la etapa build.
#
# Vers  Por Fecha      Notas
# ----- --- ---------- ----------------------------------------------------------------------------------
# 1.0.0 FNG 26/07/2022 Version inicial
#
#########################################################################################################
pkg-register-job:
  stage: register

  rules:
    # Hacemos register solo en develop, master y hotfix (si lo hay)
    - if: $CI_COMMIT_REF_NAME == "develop" || $CI_COMMIT_REF_NAME == "master" || $CI_COMMIT_REF_NAME == $HOTFIX_BRANCH

  cache:
    paths:
      - ./.m2/repository
      - target

  script:
    - >
      echo -e "==============================================================================================
      \nEjecutando etapa REGISTER en $CI_COMMIT_REF_NAME
      \n=============================================================================================="
    #
    # Si es develop deberia ser un snapshot.
    # Si es master deberia ser release.
    #
    - >
      [[ $CI_COMMIT_REF_NAME == "develop" && $IS_SNAPSHOT != "true" && $ALLOW_RELEASE_IN_DEVELOP != "true" ]] &&
      { echo -e "ERROR: PUSH de <develop> en verion RELEASE.";
      exit 2; }
    - >
      [[ $CI_COMMIT_REF_NAME == "master" && $IS_SNAPSHOT == "true" ]] &&
      { echo -e "ERROR: PUSH de <master> en version SNAPSHOT.";
      exit 2; }
    # Guardar jar y pom en el registry, usando deploy-file, para incluir los fuentes.
    # Esta seria la forma habitual - mvn deploy -s ci_settings.xml -DskipTests
    - |
      JAR_FILE="./target/selfweb-${PRJ_vers}.jar"
      SRC_FILE="src-${PRJ_vers}.jar"
      [[ -f "${JAR_FILE}" ]] || { echo "El archivo "S{JAR_FILE}" no existe"; exit 1; }
      jar cf ${SRC_FILE} ./src/*
      mvn deploy:deploy-file -Durl="${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/maven" \
      -DrepositoryId="gitlab-maven" -Dfile="${JAR_FILE}" -DpomFile="pom.xml" -Dsources="${SRC_FILE}""
  
  ################################## E O F ##########################################


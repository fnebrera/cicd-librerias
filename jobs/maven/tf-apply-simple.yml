#########################################################################################################
# Aplica el provisionado terraform, usando el plan generado previmente por tf-prepare
# SÃ³lo se ejecuta en master.
#
# Vers  Por Fecha      Notas
# ----- --- ---------- ----------------------------------------------------------------------------------
# 1.0.1 FNG 08/09/2022 Version inicial
#
#########################################################################################################
tf-apply-job:
  stage: tf-apply

  image: registry.gitlab.com/gitlab-org/terraform-images/releases/1.2:v0.43.1

  variables:
    ACCION: "apply"

  rules:
    - if: $CI_COMMIT_REF_NAME == "master"
      when: manual
    # DEBUG
    - if: $CI_COMMIT_REF_NAME == "dev-fng" && $DEBUG_CD == "true"
      when: manual

  cache:
    paths:
      - $TF_ROOT/.terraform.lock.hcl

  script:
    - >
      echo -e "==============================================================================================
      \nEjecutando etapa TF_APPLY en $CI_COMMIT_REF_NAME
      \n=============================================================================================="
    - cd $TF_ROOT
    - |
      TF_VM_IP=""
      # DEBUG mostrar contenido del directorio, incluyendo el cache
      [[ ${DEBUG_CD} == "true" ]] && { echo "INFO El contenido actual de TF_ROOT es:"; ls -al; }
      # Accion por defecto "apply"
      if [[ ${ACCION} == "apply" ]]; then
        echo "INFO ejecutando terraform apply"
        terraform apply -input=false "plan.cache"
        TF_VM_IP=$(gitlab-terraform output -raw hyperv_instance_ip)
        echo "INFO IP de la maquina virtual: ${TF_VM_IP}"
      else
        echo "INFO ejecutando terraform $ACCION"
        gitlab-terraform $ACCION
      fi
      echo "TF_VM_IP=${TF_VM_IP}" >> ${CI_PROJECT_DIR}/prepare.env
    - cd $CI_PROJECT_DIR

  artifacts:
    reports:
      dotenv: prepare.env

################################## E O F ##########################################

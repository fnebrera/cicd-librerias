#########################################################################################################
# Aplica el provisionado terraform, usando el plan generado previmente por tf-prepare
# IMPORTANTE: Por el momento sÃ³lo se ejecuta en master.
#
# Vers  Por Fecha      Notas
# ----- --- ---------- ----------------------------------------------------------------------------------
# 1.0.1 FNG 19/09/2022 Version inicial
#
#########################################################################################################
tf-apply-job:
  stage: tf-apply

  image: registry.gitlab.com/gitlab-org/terraform-images/releases/1.2:v0.43.1

  variables:
    SKIP: "false"
    ACTION: "apply"

  rules:
    - if: $CI_COMMIT_REF_NAME == "master"
      when: manual
    # DEBUG QUITAR !!!!!!!!!!!!!!!!!!!!!!!!!!!!
    - if: $CI_COMMIT_REF_NAME == "dev-fng" && $DEBUG_CD == "true"
      when: manual

  cache:
    paths:
      - ./.terraform.lock.hcl

  script:
    - >
      echo -e "==============================================================================================
      \nEjecutando etapa TF_APPLY en $CI_COMMIT_REF_NAME
      \n=============================================================================================="
    # En todas las etapas manuales hacemos lo mismo
    - '[[ ${SKIP} == "true" ]] && { echo "WARN: Ha entrado SKIP=true, asi que saltamos esta etapa."; exit 0; }'
    - cd $TF_ROOT
    - |
      echo "----------------------------------------------------------------------------------------"
      echo "INFO Inicializando Terraform usando el backed Gitlab.."
      echo "----------------------------------------------------------------------------------------"
      terraform init -input=false -reconfigure \
      -backend-config="username=$CICD_USER" \
      -backend-config="password=$CICD_TOKEN" \
      -backend-config="address=$TF_BACKED_ADDRESS" \
      -backend-config="lock_address=$TF_BACKED_ADDRESS/lock" \
      -backend-config="unlock_address=$TF_BACKED_ADDRESS/lock" \
      -backend-config="lock_method=POST" \
      -backend-config="unlock_method=DELETE" \
      -backend-config="retry_wait_min=5"
      
      TF_VM_IP=""
      # Accion por defecto "apply"
      echo "----------------------------------------------------------------------------------------"
      echo "INFO ejecutando terraform ${ACTION}"
      echo "----------------------------------------------------------------------------------------"
      case ${ACTION} in
        apply)
          terraform apply -input=false "plan.cache"
          TF_VM_IP=$(terraform output -raw hyperv_instance_ip)
          echo "INFO IP de la maquina virtual: ${TF_VM_IP}"
          ;;
        destroy)
          terraform destroy -auto-approve
          rm .terraform.lock.hcl
          ;;
        *)
          terraform $ACTION
          ;;
      esac
      echo "TF_VM_IP=${TF_VM_IP}" >> ${CI_PROJECT_DIR}/prepare.env
      echo "=============================================================================================="
      echo "INFO Etapa TF_APPLY finalizada con exito"
      echo "=============================================================================================="
    - cd $CI_PROJECT_DIR

  artifacts:
    reports:
      dotenv: prepare.env

################################## E O F ##########################################

#########################################################################################################
# Construye el fat-jar dejandolo preparado en el directorio /target.
# Se ejecuta solo para ramas master y develop.
# Se cachea el directorio /target, que habra sido limpiado previamente por la etapa compile.
#
# Vers  Por Fecha      Notas
# ----- --- ---------- ----------------------------------------------------------------------------------
# 1.0.0 FNG 22/08/2022 Version inicial
#
#########################################################################################################
build-job:
  stage: build

  rules:
    # Hacemos build solo en develop, master y hotfix (si lo hay)
    - if: $CI_COMMIT_REF_NAME == "develop" || $CI_COMMIT_REF_NAME == "master" || $CI_COMMIT_REF_NAME == $HOTFIX_BRANCH

  cache:
    paths:
      - ./.m2/repository
      - target
      
  script:
    - >
      echo -e "==============================================================================================
      \nEjecutando etapa BUILD en $CI_COMMIT_REF_NAME
      \n=============================================================================================="
    # 
    # Hacemos build en cualquier caso.
    # Saltamos tests, pues deberian haberse ejecutado antes.
    #
    - mvn package -DskipTests
    #
    # Si es develop deberia ser un snapshot, salvo que permitamos release.
    # Si es master deberia ser release.
    #
    - |
      if [[ $CI_COMMIT_REF_NAME == "master" && $IS_SNAPSHOT == "true" ]]; then
        echo -e "ERROR: PUSH de <master> en version SNAPSHOT no permitido.\nSe ha generado el artefacto, pero el pipeline se interrumpira." 
        exit 2
      fi
      if [[ $CI_COMMIT_REF_NAME == "develop" ]]; then
        if [[ $IS_SNAPSHOT != "true" && $ALLOW_RELEASE_IN_DEVELOP != "true" ]]; then
          echo -e "ERROR: PUSH de <develop> en verion RELEASE no permitido.\nSe ha generado el artefacto, pero el pipeline se interrumpira."
          exit 3
        fi
        if [[ $REGISTER_DEVELOP != "true" ]]; then
          echo -e "INFO: La rama <develop> NO se registra.\nSe ha generado el artefacto, pero el pipeline se interrumpira."
          exit 4
        fi
      fi
      echo "INFO Build finalizado con exito"

  #
  # En caso de error, generamos un artefacto que expira en 8 horas, por si el
  # usuario desea conservar el .jar o alguno de los archivos de configuracion.
  #
  artifacts:
    when: on_failure
    name: "Build ${CI_COMMIT_REF_NAME} en pipeline erroneo"
    paths:
      - ./target/*.jar
      - ./pom.xml
      - ./.gitlab-ci.yml
    expire_in: 8 hours

  ################################## E O F ##########################################

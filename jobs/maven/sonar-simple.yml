#########################################################################################################
# Pasar Sonarqube para verificar la calidad del codigo. Se ejecuta para cualquier push, para evitar
# pasar a etapas posteriores si no se pasan los niveles de calidad requeridos.
#
# Vers  Por Fecha      Notas
# ----- --- ---------- ----------------------------------------------------------------------------------
# 1.0.0 FNG 26/07/2022 Version inicial
#
#########################################################################################################
sonar-job:
  stage: sonar

  rules:
    # Siempre pasamos sonar a ramas principales
    - if: $CI_COMMIT_REF_NAME == "develop" || $CI_COMMIT_REF_NAME == "master"
    # Pasamos sonar a cualquier otro branch dependiendo del correspondiente flag,
    # pero tambien debe haber un compile o un test previo
    - if: $SONAR_AUX_BRANCHES == "true" && ($COMPILE_AUX_BRANCHES == "true" || TEST_AUX_BRANCHES == "true")
    
  cache:
    paths:
      - ./.m2/repository
      - ./.sonar/cache
      - target

  script:
    - 'echo "=============================================================================================="'
    - 'echo "Ejecutando etapa SONAR en branch $CI_COMMIT_REF_NAME"'
    - 'echo "=============================================================================================="'
    - 'SKIP_UNCHANGED="-Dsonar.java.skipUnchanged=true"'
    # En ramas master y develop, forzamos analizar todo el codigo y no solo los cambios
    - '[[ $CI_COMMIT_REF_NAME == "master" || $CI_COMMIT_REF_NAME == "develop" ]] && SKIP_UNCHANGED="-Dsonar.java.skipUnchanged=false"'
    - 'echo "SKIP_UNCHANGED: $SKIP_UNCHANGED"'
    - mvn validate sonar:sonar -DskipTests -Dsonar.qualitygate.wait=true $SKIP_UNCHANGED


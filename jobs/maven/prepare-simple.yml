#########################################################################################################
# Esta primera estapa del pipeline se ejecuta de manera incondicional, y se encarga de preparar la cache
# y las variables de entorno que se vayan a emplear en subsiguientes etapas.
#
# Vers  Por Fecha      Notas
# ----- --- ---------- ----------------------------------------------------------------------------------
# 1.0.0 FNG 26/07/2022 Version inicial
#
#########################################################################################################
prepare-job:
  stage: prepare

  cache:
    paths:
      - ./.m2/repository
      - target
      
  script:
    - >
      echo -e "==============================================================================================
      \nEjecutando etapa PREPARE en $CI_COMMIT_REF_NAME
      \n=============================================================================================="
    - 'PRJ_VERS=$(mvn org.apache.maven.plugins:maven-help-plugin:3.1.0:evaluate -Dexpression=project.version -q -DforceStdout)'
    - '[[ -z ${PRJ_VERS} ]] && { echo "ERROR: No se ha encontrado la version del proyecto en el pom.xml"; exit 2; }'
    - 'echo "Version del proyecto: ${PRJ_VERS}"'
    - 'DOCKER_PRJ="false"'
    - '[[ -f "Dockerfile" ]] && DOCKER_PRJ="true"'
    - 'echo "Â¿Es un proyecto Docker?: ${DOCKER_PRJ}"'
    - 'IS_SNAPSHOT="false"'
    - '[[ $PRJ_VERS == *"SNAPSHOT" ]] && IS_SNAPSHOT=="true"'
    # Limpiar el directorio target, si es que existe (no deberia)
    - '[[ -d "target" ]] && mvn clean'
    # Guardar la/s variables de entorno globales en un fichero .env
    - 'echo "PRJ_VERS=$PRJ_VERS" > prepare.env'
    - 'echo "DOCKER_PRJ=$DOCKER_PRJ" >> prepare.env'
    - 'echo "IS_SNAPSHOT=$IS_SNAPSHOT" >> prepare.env'
    # Mas cosas que se necesiten siempre???
    
  # Creamos un artefacto que contiene la/s variables/s de entorno, que asi estan
  # automaticamente disponibles para el resto del pipeline
  artifacts:
    reports:
      dotenv: prepare.env
